#pragma once
// This file has been generated by zoltan (https://github.com/jac3km4/zoltan)

#define ZOLTAN_STRINGISE(N) #N
#define ZOLTAN_EXPAND_THEN_STRINGISE(N) ZOLTAN_STRINGISE(N)
#define __LINE_STR__ ZOLTAN_EXPAND_THEN_STRINGISE(__LINE__)

#define CBaseEngine_LoadScripts_Addr 0x95355C
#define CBaseRTTIType_VFT_Addr 0x2F8F8D8
#define CBaseRTTIType_dstr_Addr 0x1FEC25C
#define CClass_ApplyFlags_Addr 0x9B40B0
#define CClass_VFT_Addr 0x2A4C078
#define CClass_VFT_Construct_Addr 0x159E44
#define CClass_VFT_Destruct_Addr 0x15668C
#define CClass_VFT_GetComputedName_Addr 0x17B7350
#define CClass_VFT_GetName_Addr 0x17B7340
#define CClass_VFT_GetSize_Addr 0x17B7360
#define CClass_VFT_GetType_Addr 0x17B7370
#define CClass_VFT_Move_Addr 0x5092E8
#define CClass_VFT_dstr_Addr 0x1B3F970
#define CProcessRunner_Run_Addr 0x82E260
#define CRTTIArrayType_VFT_Addr 0x2A4BD30
#define CRTTIHandleType_VFT_Addr 0x2A4BF40
#define CRTTINativeArrayType_VFT_Addr 0x2A3DF08
#define CRTTIPointerType_VFT_Addr 0x2A66CE8
#define CRTTIResourceAsyncReferenceType_VFT_Addr 0x2AB0B00
#define CRTTIResourceReferenceType_VFT_Addr 0x2AD3590
#define CRTTIStaticArrayType_VFT_Addr 0x2A3E258
#define CRTTIWeakHandleType_VFT_Addr 0x2A4BE50
#define GetGameSystemsData_Addr 0xD630A4
#define GpuApi_Present_Addr 0x47C06C
#define HandleSharedStorage_AddRefWeak_Addr 0x133C64
#define HandleSharedStorage_HandleSharedStorage_Addr 0x157480
#define ISerializable_OnSerialize_Addr 0x15A234
#define ISerializable_OnSerializeFromText_Addr 0x1FDE454
#define ISerializable_OnSerializeToText_Addr 0x1FDE48C
#define ISerializable_VFT_Addr 0x2A11750
#define ISerializable_VFT_GetAllocator_Addr 0x2C4CFC
#define ISerializable_VFT_GetType_Addr 0x17B6F80
#define ISerializable_VFT_sub_30_Addr 0x1FDE42C
#define ISerializable_dstr_Addr 0x1FDE3F8
#define ISerializable_getNativeType_Addr 0x17B6F80
#define PureCall_Addr 0x17DA0C8
#define Return0u16_Addr 0x18488A0
#define Return1_Addr 0xA11A3E
#define Return10_Addr 0x17B7440
#define Return11_Addr 0x17B7420
#define Return12_Addr 0x17B7410
#define Return13_Addr 0x17B74D0
#define Return14_Addr 0x17B7040
#define Return15_Addr 0x17B7430
#define Return16u32_Addr 0x17B72F0
#define Return1u32_Addr 0x17B73D0
#define Return2_Addr 0x17B7370
#define Return24u32_Addr 0x17B72D0
#define Return3_Addr 0x17B7490
#define Return32u32_Addr 0x17B7300
#define Return4_Addr 0x17B7030
#define Return40u32_Addr 0x17B7320
#define Return4u32_Addr 0x17B72E0
#define Return5_Addr 0x17B7460
#define Return6_Addr 0x17B74C0
#define Return7_Addr 0x17B74B0
#define Return8_Addr 0x17B7400
#define Return88u32_Addr 0x17B7310
#define Return8u32_Addr 0x17B7000
#define Return9_Addr 0x17B73F0
#define ReturnN1i32_Addr 0x17B73B0
#define ReturnZero64_Addr 0x5095F0
#define ReturnZero8_Addr 0x18DED10
#define UpdateManagerUpdateStorage_Copy_0_Addr 0x7FBD6C
#define audioGameParameterStorage_GetValue_Addr 0x2C8C68
#define entComponentsStorage_GetSize_Addr 0x17BCBC0
#define entEntity_SetRuntime_Addr 0x1BFFB00
#define entIComponent_VFT_Addr 0x2A20D90
#define entIPlacedComponent_VFT_Addr 0x2A20B40
#define gameIGameSystem_VFT_Addr 0x2C62068
#define physicsProxyCache_GetDataFromCache_Addr 0x1C2164
#define physicsProxyHelper_Unlock_Addr 0x2056F0
#define physicsProxyHelper_UpdateProxyCache_Addr 0x1C1B58
#define physicsVehiclePhysicsInsert1_SinMath_Addr 0x209D5C
#define purecall_Addr 0x17DA0C8
#define redGameAppBaseInitializationState_OnTick_Addr 0x826B2C
#define redGameAppInitializationState_OnTick_Addr 0x826BE8
#define redGameAppInstance_RegisterState_Addr 0x8271FC
#define redGameAppRunningState_OnTick_Addr 0x826B84
#define redGameAppShutdownState_OnTick_Addr 0x952B9C
#define rtti_Addr 0x3EC41A8
#define rttiBitFieldType_FromString_Addr 0x2002700
#define rttiBitFieldType_Serialize_Addr 0x2C8D6C
#define rttiBitFieldType_ToString_Addr 0x2002818
#define rttiClassType_ClearScriptData_Addr 0x612800
#define rttiClassType_CreateObject_Addr 0x158C50
#define rttiClassType_FindFunctionByHash_Addr 0x50743C
#define rttiClassType_FindProperty_Addr 0x159BD8
#define rttiClassType_GetAlignment_Addr 0x17B7330
#define rttiClassType_GetProperties_Addr 0x611790
#define rttiClassType_InitializeScriptDefaultValues_Addr 0x158DE8
#define rttiClassType_InitializeScriptedProperties_Addr 0x159514
#define rttiClassType_Serialize_Addr 0x1592D4
#define rttiClassType_ToString_Addr 0x6656CC
#define rttiEnumType_FromString_Addr 0x70AC74
#define rttiEnumType_Serialize_Addr 0x159FC4
#define rttiEnumType_ToString_Addr 0x70A5D4
#define rttiFunction_CallFunction_Addr 0x1FD3C9C
#define rttiFunction_CallNative_Addr 0x1FF21D8
#define rttiFunction_InternalCall_Addr 0x50949C
#define rttiFunction_InternalCallNative_Addr 0x157F40
#define rttiIScriptable_FindFunction_Addr 0x183DD0
#define rttiIType_GetERTTITypeString_Addr 0x1FF1B4C
#define rttiIType_GetRefName_Addr 0x1856D8
#define rttiIType_ReadValue_Addr 0x1FF1CA4
#define rttiIType_SerializeFromText_Addr 0x1FF1DC8
#define rttiIType_SerializeToText_Addr 0x1FF1E68
#define rttiIType_WriteValue_Addr 0x1FF1EF4
#define rttiNativeGlobalFunction_NativeGlobalFunction_Addr 0x9B0094
#define rttiNativeMemberFunction_NativeMemberFunction_Addr 0x60F5AC
#define rttiNativeMemberFunction_NativeMemberFunction_0_Addr 0x9B00E0
#define userRuntimeSettingsVarBool_VFT_Addr 0x3125E08
#define userRuntimeSettingsVarFloatList_VFT_Addr 0x3126978
#define userRuntimeSettingsVarFloat_VFT_Addr 0x3126920
#define userRuntimeSettingsVarInt_VFT_Addr 0x31268C8
#define userRuntimeSettingsVarNameList_VFT_Addr 0x3125F10
#define userRuntimeSettingsVarName_VFT_Addr 0x3125E60
#define userRuntimeSettingsVarStringList_VFT_Addr 0x2FFA580
#define userRuntimeSettingsVar_VFT_Addr 0x2FFA528
#define vehicleBikePhysics_AnimationUpdate_Addr 0x20FA04
#define vehicleBikePhysics_VFT_Addr 0x2AA3378
#define vehicleCarPhysics_AnimationUpdate_Addr 0x17D294
#define vehiclePhysicsData_ApplyForceAtPosition_Addr 0x207F24
#define vehiclePhysicsData_ApplyTorqueAtPosition_Addr 0x172F4C
#define vehiclePhysics_SetUnkA0ToOne_Addr 0x1B6006
#define vehiclePhysics_VFT_Addr 0x2AA4290
#define vehicleTankPhysics_VFT_Addr 0x2C222D0
#define vehicleUnk570_GetSmearFxForMaterial_Addr 0xBCDFB0
#define vehicleUnkD10_Reset_Addr 0xA14C68
#define vehicleWheeledPhysics_VFT_Addr 0x2AA40E0
#define wWinMain_Addr 0x988610

#include <RED4ext/RED4ext.hpp>
#include <RED4ext/Relocation.hpp>
#include <RED4ext/RTTITypes.hpp>
#include <RED4ext/Scripting/Natives/GameInstance.hpp>
#include <RED4ext/ISerializable.hpp>
#include <RED4ext/CommonFunctions.hpp>
#include <RED4ext/Scripting/Natives/UpdateManager.hpp>
#include <RED4ext/Scripting/Natives/audioEmitter.hpp>
#include <RED4ext/Scripting/Natives/entComponentsStorage.hpp>
#include <RED4ext/Scripting/Natives/entEntity.hpp>
#include <RED4ext/Scripting/Natives/entIComponent.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/IPlacedComponent.hpp>
#include <RED4ext/Scripting/Natives/gameIGameSystem.hpp>
#include <RED4ext/Scripting/Natives/physicsProxyCache.hpp>
#include <RED4ext/Scripting/Natives/physicsProxyHelper.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysicsInsert1.hpp>
#include <RED4ext/RTTITypes.hpp>
#include <RED4ext/RTTISystem.hpp>
#include <RED4ext/Scripting/Natives/userRuntimeSettingsVar.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysics.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysicsData.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysics.hpp>
#include <RED4ext/Scripting/Natives/vehicleBaseObject.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysics.hpp>

RED4EXT_INLINE void RED4ext::CClass::ApplyFlags(RED4ext::CClass::Flags a1, bool a2) {
    using CClass_ApplyFlags_t = void (*)(RED4ext::CClass*, RED4ext::CClass::Flags, bool);
    RED4ext::RelocFunc<CClass_ApplyFlags_t> call(CClass_ApplyFlags_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::DynArray<RED4ext::GameSystemData>* RED4ext::GetGameSystemsData(RED4ext::DynArray<RED4ext::GameSystemData>* a0) {
    using GetGameSystemsData_t = RED4ext::DynArray<RED4ext::GameSystemData>* (*)(RED4ext::DynArray<RED4ext::GameSystemData>*);
    RED4ext::RelocFunc<GetGameSystemsData_t> call(GetGameSystemsData_Addr);
    return call(a0);
}

RED4EXT_INLINE void RED4ext::ISerializable::getNativeType() {
    using ISerializable_getNativeType_t = void (*)(RED4ext::ISerializable*);
    RED4ext::RelocFunc<ISerializable_getNativeType_t> call(ISerializable_getNativeType_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::UpdateManager::UpdateStorage* RED4ext::UpdateManager::UpdateStorage::Copy_0(RED4ext::UpdateManager::UpdateStorage* a1) {
    using UpdateManagerUpdateStorage_Copy_0_t = RED4ext::UpdateManager::UpdateStorage* (*)(RED4ext::UpdateManager::UpdateStorage*, RED4ext::UpdateManager::UpdateStorage*);
    RED4ext::RelocFunc<UpdateManagerUpdateStorage_Copy_0_t> call(UpdateManagerUpdateStorage_Copy_0_Addr);
    return call(this, a1);
}

RED4EXT_INLINE float RED4ext::audio::GameParameterStorage::GetValue(RED4ext::CName a1, float a2) {
    using audioGameParameterStorage_GetValue_t = float (*)(RED4ext::audio::GameParameterStorage*, RED4ext::CName, float);
    RED4ext::RelocFunc<audioGameParameterStorage_GetValue_t> call(audioGameParameterStorage_GetValue_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE int64_t RED4ext::ent::ComponentsStorage::GetSize() {
    using entComponentsStorage_GetSize_t = int64_t (*)(RED4ext::ent::ComponentsStorage*);
    RED4ext::RelocFunc<entComponentsStorage_GetSize_t> call(entComponentsStorage_GetSize_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::ent::Entity::SetRuntime(int64_t a1) {
    using entEntity_SetRuntime_t = void (*)(RED4ext::ent::Entity*, int64_t);
    RED4ext::RelocFunc<entEntity_SetRuntime_t> call(entEntity_SetRuntime_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void* RED4ext::physics::ProxyCache::GetDataFromCache(uint32_t a1) {
    using physicsProxyCache_GetDataFromCache_t = void* (*)(RED4ext::physics::ProxyCache*, uint32_t);
    RED4ext::RelocFunc<physicsProxyCache_GetDataFromCache_t> call(physicsProxyCache_GetDataFromCache_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::physics::ProxyHelper::Unlock() {
    using physicsProxyHelper_Unlock_t = int64_t (*)(RED4ext::physics::ProxyHelper*);
    RED4ext::RelocFunc<physicsProxyHelper_Unlock_t> call(physicsProxyHelper_Unlock_Addr);
    return call(this);
}

RED4EXT_INLINE bool RED4ext::physics::ProxyHelper::UpdateProxyCache() {
    using physicsProxyHelper_UpdateProxyCache_t = bool (*)(RED4ext::physics::ProxyHelper*);
    RED4ext::RelocFunc<physicsProxyHelper_UpdateProxyCache_t> call(physicsProxyHelper_UpdateProxyCache_Addr);
    return call(this);
}

RED4EXT_INLINE float RED4ext::physics::VehiclePhysicsInsert1::SinMath(float a1) {
    using physicsVehiclePhysicsInsert1_SinMath_t = float (*)(RED4ext::physics::VehiclePhysicsInsert1*, float);
    RED4ext::RelocFunc<physicsVehiclePhysicsInsert1_SinMath_t> call(physicsVehiclePhysicsInsert1_SinMath_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::BikePhysics::AnimationUpdate() {
    using vehicleBikePhysics_AnimationUpdate_t = int64_t (*)(RED4ext::vehicle::BikePhysics*);
    RED4ext::RelocFunc<vehicleBikePhysics_AnimationUpdate_t> call(vehicleBikePhysics_AnimationUpdate_Addr);
    return call(this);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::CarPhysics::AnimationUpdate(float a1) {
    using vehicleCarPhysics_AnimationUpdate_t = int64_t (*)(RED4ext::vehicle::CarPhysics*, float);
    RED4ext::RelocFunc<vehicleCarPhysics_AnimationUpdate_t> call(vehicleCarPhysics_AnimationUpdate_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::PhysicsData::ApplyForceAtPosition(RED4ext::Vector3* a1, RED4ext::Vector3* a2) {
    using vehiclePhysicsData_ApplyForceAtPosition_t = void (*)(RED4ext::vehicle::PhysicsData*, RED4ext::Vector3*, RED4ext::Vector3*);
    RED4ext::RelocFunc<vehiclePhysicsData_ApplyForceAtPosition_t> call(vehiclePhysicsData_ApplyForceAtPosition_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::PhysicsData::ApplyTorqueAtPosition(RED4ext::Vector3* a1, RED4ext::Vector3* a2) {
    using vehiclePhysicsData_ApplyTorqueAtPosition_t = void (*)(RED4ext::vehicle::PhysicsData*, RED4ext::Vector3*, RED4ext::Vector3*);
    RED4ext::RelocFunc<vehiclePhysicsData_ApplyTorqueAtPosition_t> call(vehiclePhysicsData_ApplyTorqueAtPosition_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::Physics::SetUnkA0ToOne() {
    using vehiclePhysics_SetUnkA0ToOne_t = void (*)(RED4ext::vehicle::Physics*);
    RED4ext::RelocFunc<vehiclePhysics_SetUnkA0ToOne_t> call(vehiclePhysics_SetUnkA0ToOne_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::vehicle::Unk570::SmearFxLookup* RED4ext::vehicle::Unk570::GetSmearFxForMaterial(RED4ext::CName a1, bool a2) {
    using vehicleUnk570_GetSmearFxForMaterial_t = RED4ext::vehicle::Unk570::SmearFxLookup* (*)(RED4ext::vehicle::Unk570*, RED4ext::CName, bool);
    RED4ext::RelocFunc<vehicleUnk570_GetSmearFxForMaterial_t> call(vehicleUnk570_GetSmearFxForMaterial_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::UnkD10::Reset(int32_t a1) {
    using vehicleUnkD10_Reset_t = void (*)(RED4ext::vehicle::UnkD10*, int32_t);
    RED4ext::RelocFunc<vehicleUnkD10_Reset_t> call(vehicleUnkD10_Reset_Addr);
    return call(this, a1);
}

