#pragma once

// This file is generated by Jack

#include <RED4ext/Common.hpp>
#include <cstdint>
#include <RED4ext/Scripting/Natives/Generated/Transform.hpp>
#include <RED4ext/Scripting/Natives/physicsProxyID.hpp>
#include <RED4ext/Scripting/Natives/entITransformAttachable.hpp>
#include <RED4ext/Scripting/Natives/physicsInitialState.hpp>
#include <RED4ext/Scripting/Natives/physicsBaseProxy.hpp>
#include <RED4ext/Scripting/Natives/physicsProxyCacheID.hpp>

namespace RED4ext::physics {
struct ProxyCache;
struct ProxyManager
{
    // 1.6 RVA: 0x46A7E0 / 4630496
    /// @pattern 48 89 74 24 10 57 48 83 EC 20 44 8B 02 48 8B F2 48 8B F9 41 83 F8 FF 74 67 B8 FF FF 00 00 66 44
    bool __fastcall TestUnk2E2068(ProxyID *proxyID);

    // 1.6  RVA: 0x46A560 / 4629856
    /// @pattern 48 89 5C 24 08 57 48 83 EC 30 8B 02 4C 8D 44 24 48 48 8B DA 89 44 24 48 48 8D 54 24 20 48 8B F9
    ProxyCache *__fastcall GetProxyCache(ProxyID *proxyID);

    // 1.6  RVA: 0x46A7E0 / 4630496
    /// @pattern 48 89 74 24 10 57 48 83 EC 20 44 8B 02 48 8B F2 48 8B F9 41 83 F8 FF 74 67 B8 FF FF 00 00 66 44
    bool __fastcall HasProxy(ProxyID *proxyID);

    // 1.6  RVA: 0x46A410 / 4629520
    /// @pattern 48 89 5C 24 08 48 89 74 24 18 57 48 83 EC 40 41 8B 00 48 8B DA 48 8D 54 24 58 89 44 24 58 49 8B
    Handle<BaseProxy> *__fastcall GetProxyHandle(Handle<BaseProxy> *handle, ProxyID *proxyID);

    // passed -1 when collision is disabled
    // 1.6  RVA: 0x46AB50 / 4631376
    /// @pattern 0F B7 12 41 8B 00 89 84 91 54 20 2A 00 C3
    void __fastcall SetProxyCacheID(ProxyID *proxyID, ProxyCacheID *proxyCacheID);

    struct Unk102010 {
        uint8_t unk0;
        uint8_t unk1;
    };

    SharedMutex unk0000;
    uint64_t unk0008[1023];
    uint32_t unk2000;
    uint32_t unk2004;
    uint32_t unk2008;
    uint32_t unk200C;
    uint32_t unk2010;
    // 0x2018
    // index'd by ProxyID.index - Handle to physics::PhysicalSystemKey
    StaticArray<Handle<BaseProxy>, 0xFFFF> systemKeys;
    // index'd by ProxyID.index
    StaticArray<Unk102010, 0xFFFF> unk102010;
    // 0x122018
    // index'd by ProxyID.index
    StaticArray<ProxyCacheEntry*, 0xFFFF> proxyCacheEntries;
    // index'd by ProxyID.index - phyicsSystemDesc->unkA0, worldTransforms?
    StaticArray<NativeArray<InitialState, 16>*, 0xFFFF> unk1A2018;
    // 0x222018
    // index'd by ProxyID.index
    StaticArray<ent::ITransformAttachable, 0xFFFF> interfaces;
    // physicsSystemDesc types
    uint32_t refCounts_2A2018[15];
    // 0x2A2054
    // index'd by ProxyID.index
    // Unk948.unk00 assign here when collision is enabled
    // -1 assigned when disabled
    // used to index ProxyCacheManager.140, ProxyCacheManager.unk38
    StaticArray<ProxyCacheID, 0xFFFF> proxyCacheIDs;
    // mutex for unk2E2058 & unk2E2068
    SharedMutex unk2E2054;
    // ProxyID storage? size 4 bytes
    DynArray<ProxyID> unk2E2058;
    // index'd by ProxyID.index
    // used to track if a handle exists/is active?
    NativeArray<uint8_t, 0xFFFF/8> unk2E2068;
};
RED4EXT_ASSERT_SIZE(ProxyManager, 0x2E4068);
RED4EXT_ASSERT_OFFSET(ProxyManager, systemKeys, 0x2018);
RED4EXT_ASSERT_OFFSET(ProxyManager, unk102010, 0x102010);
RED4EXT_ASSERT_OFFSET(ProxyManager, proxyCacheEntries, 0x122018);
RED4EXT_ASSERT_OFFSET(ProxyManager, unk1A2018, 0x1A2018);
RED4EXT_ASSERT_OFFSET(ProxyManager, interfaces, 0x222018);
RED4EXT_ASSERT_OFFSET(ProxyManager, proxyCacheIDs, 0x2A2054);
RED4EXT_ASSERT_OFFSET(ProxyManager, unk2E2054, 0x2E2054);
RED4EXT_ASSERT_OFFSET(ProxyManager, unk2E2058, 0x2E2058);
RED4EXT_ASSERT_OFFSET(ProxyManager, unk2E2068, 0x2E2068);
//char (*__kaboom)[sizeof(ProxyManager)] = 1;
}