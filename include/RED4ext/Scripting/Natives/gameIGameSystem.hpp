#pragma once

// This file is generated by Jack

#include <cstdint>
#include <RED4ext/Common.hpp>
#include <RED4ext/Scripting/IScriptable.hpp>
#include <RED4ext/Scripting/Natives/IUpdatableSystem.hpp>

namespace RED4ext
{
struct GameInstance;

namespace game { 
// maybe this instead?
// struct IGameSystem : IScriptable, virtual IUpdatableSystem
struct IGameSystem : IUpdatableSystem
{
    static constexpr const char* NAME = "gameIGameSystem";
    static constexpr const char* ALIAS = "IGameSystem";

    // after "gameIGameSystem" string
    // static constexpr const uintptr_t VFT = 0x31B53F0;
    // 1.6  RVA: 0x3214700
    // 1.61 RVA: 0x3219820
    // 1.62 RVA: 0x321C920
    static constexpr const uintptr_t VFT = 0x321C920;

    struct HighLow
    {
        void* unk00;
        void* performance;
        uint8_t crowdDensity;
    };

    // 1.52 RVA: 0xAEC190 / 11452816
    /// @pattern 40 53 48 83 EC 20 48 8B D9 E8 22 B8 F8 FF 48 8D 05 4B 92 6C 02 48 C7 43 40 00 00 00 00 48 89 03
    //IGameSystem();

    virtual CClass* GetNativeType() override;     
    virtual ~IGameSystem() override = default;

    virtual bool WorldAttached(world::RuntimeScene * runtimeScene); // 118 OnAttach
    virtual void WorldPendingDetach(world::RuntimeScene * runtimeScene); // 120 OnDetach
    virtual void WorldDetached(world::RuntimeScene * runtimeScene); // 128 HasDetached
    virtual void sub_130(); // 130
    // 138 returns 0 - DelaySystem, ContainerManager, QuestSystem return 1
    // PreSaveSystems
    virtual uint32_t sub_138(uint64_t, uint64_t);
    // 140 related to 150 maybe
    // called on SaveGame/SaveSystems
    virtual void sub_140(uint64_t saveGameInterface);
    // 148 PostSaveSystems
    virtual void sub_148();
    // 150 OnGameLoad / Load
    virtual void OnGameLoad(void *, uint64_t, uint64_t saveGameInterface);
    // 158 ReturnOne, something WaitingForEntities, "Saved"
    // right before player attach
    virtual bool sub_158(); 
    virtual void OnGamePrepared(); // 160 OnGamePrepared
    virtual void sub_168(); // 168 Pause game
    virtual void sub_170(); // 170 Resume game
    // 178, 138, 148 fire when going out-of-bounds
    virtual void sub_178(uintptr_t a1, bool a2); // something with a CString @ 0x08 - PointOfNoReturnSave?                   
    virtual void OnStreamingWorldLoaded(uint64_t, bool isGameLoaded, uint64_t); // 180 OnStreamingWorldLoaded
    virtual void sub_188(); // 188, some systems use a string here
    // called from GameInstance->sub_20, recieves some struct based on game performance setting & crowd density
    virtual void sub_190(HighLow *);
    // called after created & gameInstance is set
    // OnInitialize called
    // Tweaks loaded
    virtual void Initialize(void ** unkThing);
    virtual void sub_1A0(); // 1A0 on exit game

    // 1.52 RVA: 0xAEC8E0 / 11454688
    // Sets gameInstance, creates unkThing, calls sub_198
    // Called from GameInstance->sub_20
    /// @pattern 48 89 5C 24 10 57 48 83 EC 20 48 8B FA 66 C7 44 24 30 00 00 0F B7 44 24 30 48 8D 54 24 30 4C 89
    void ** __fastcall SetGameInstance(void ** unkThing, GameInstance * gameInstance);

    // 1.52 RVA: 0xAEC970 / 11454832
    // Unsets unk40, calls sub_1A0
    /// @pattern 40 53 48 83 EC 20 48 8B 01 48 8B D9 FF 90 A0 01 00 00 48 C7 43 40 00 00 00 00 48 83 C4 20 5B C3
    __int64 __fastcall Unset();

    GameInstance* gameInstance; // 40
};
RED4EXT_ASSERT_SIZE(IGameSystem, 0x48);
} // namespace game
} // namespace RED4ext

#ifdef RED4EXT_HEADER_ONLY
#include <RED4ext/Scripting/Natives/gameIGameSystem-inl.hpp>
#endif
