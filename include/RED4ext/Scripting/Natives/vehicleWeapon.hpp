#pragma once

// This file is generated by Jack

#include <cstdint>
#include <RED4ext/Common.hpp>
#include <RED4ext/NativeTypes.hpp>
#include <RED4ext/Scripting/Natives/Generated/game/weapon/Object.hpp>

namespace RED4ext
{
struct TweakDBID;
namespace game
{
    namespace weapon {
        struct Object;
    }
}
namespace vehicle
{
// #pragma pack(push, 1)
struct Weapon
{
    static constexpr const char* NAME = "vehicleWeapon";
    static constexpr const char* ALIAS = NAME;

    TweakDBID item;
    TweakDBID slot;
    Handle<game::weapon::Object> weaponObject;
    float minPitch; // 20
    float maxPitch;
    float minYaw;
    float maxYaw;
    CName weaponShootAimEevent;
    uint8_t singleShotProjectiles;
    uint32_t wholeBurstProjectiles;
    uint32_t unk40;
    uint32_t unk44;
    uint32_t unk48;
    float singleProjectileCycleTime;
    float attackRange;
    float spread;
    uint32_t unk58;
    uint32_t unk5C;
    uint32_t unk60;
    uint8_t genericTick;
    uint8_t genericShoot;
    uint8_t canFriendlyFire;
    uint8_t unk67;
};
// #pragma pack(pop)
RED4EXT_ASSERT_SIZE(Weapon, 0x68);
//char (*__kaboom)[sizeof(BaseObject)] = 1;
} // namespace vehicle
// using VehicleWeapon = vehicle::Weapon;
} // namespace RED4ext
