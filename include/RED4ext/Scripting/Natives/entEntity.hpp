#pragma once

// This file is generated by Jack

#include <cstdint>
#include <RED4ext/Common.hpp>
#include <RED4ext/Scripting/Natives/Generated/Vector2.hpp>
#include <RED4ext/Scripting/IScriptable.hpp>
#include <RED4ext/Scripting/Natives/Generated/ECustomCameraTarget.hpp>
#include <RED4ext/Scripting/Natives/Generated/RenderSceneLayerMask.hpp>
#include <RED4ext/Scripting/Natives/entComponentsStorage.hpp>
//#include <RED4ext/Scripting/Natives/Generated/ent/PlaceholderComponent.hpp>
#include <RED4ext/Scripting/Natives/entEntityDefinition.hpp>
#include <RED4ext/Scripting/Natives/ScriptGameInstance.hpp>
#include <RED4ext/ResourcePath.hpp>
#include <RED4ext/GameEngine.hpp>
#include <RED4ext/Scripting/Natives/Callbacks.hpp>
#include <RED4ext/Scripting/Natives/Generated/red/Taglist.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/EntityID.hpp>
#include <RED4ext/Scripting/Natives/worldRuntimeScene.hpp>

namespace RED4ext
{
namespace world { struct RuntimeScene; }
namespace ent
{
//struct ComponentsStorage;
//struct PlaceholderComponent;
struct Entity : IScriptable
{
    static constexpr const char* NAME = "entEntity";
    static constexpr const char* ALIAS = "Entity";
    static constexpr const uintptr_t VFT = entEntity_VFT_Addr;
    
    // Setup callbacks:
    // entity->OnRequestComponents(void *)
    // components->Initialize(void*)
    // something special with AnimatedComponent
    // something else with ANimatedComponent & VisualC
    // entity->sub_140(void *, uint16_t*)

        // InitializeComponents:
        // * set components->entity
        // * components->sub160() && entity->unk148
        //   * components->sub_230()
        //   * set components->unk58 based on entity->unk148
        // * components->sub178(void* entityInit)

        // GatherEventListeners:
        // * entity->sub_180(Handle<CallbackManager>*)
        // * components->sub_1F0(Handle<CallbackManager>*)

        // ResolveRequestedComponentsAndFinish:
        // * PostInitializeEvent
        // * components->sub_218(void*)

    // PreUninitializeEvent
    // * entity->sub_150()
    // * components->sub_180(scriptGameInstance)

// overrides

    virtual CClass* GetNativeType() override;                   // 00
    virtual Memory::IAllocator* GetAllocator() override;        // 10
    virtual ~Entity() = default;                                // 18
    virtual bool sub_40(BaseStream* aStream) override;          // 40
    virtual void* sub_C0(void* a1) override;                    // C0

// new virtuals

    virtual void sub_108() { }                                  // 108
    virtual float sub_110();                                    // 110 return 1f
    virtual Vector2* sub_118(Vector2* a1, Vector2* a2);         // 118 tick??
    virtual uint8_t sub_120();                                  // 120 return 0u8
    virtual uint8_t sub_128();                                  // 128 return 1u8
    virtual void sub_130();                                     // 130 maybe something with component flags
    virtual void sub_138(Handle<void>*, int16_t*) { };          // 138 called when components are loaded
    virtual void sub_140(uintptr_t) { };                        // 140
    virtual void sub_148(uintptr_t a1, uintptr_t a2);           // 148 PreUninitialize
    virtual void sub_150(uintptr_t);                            // 150 
    virtual void Attach(void *) { };                            // 150
    virtual uintptr_t Detach() { };                             // 158
    virtual void sub_168(uint8_t) { };                          // 168
    virtual uintptr_t sub_170();                                // 170
    virtual uintptr_t sub_178();                                // 178
    virtual void sub_180(Handle<CallbackManager>*) { };         // 180 GatherEventListeners
    virtual void OnRequestComponents(void *) { };               // 188
    virtual void sub_190() { };                                 // 190
    virtual void sub_198() { };                                 // 198 tick2??
    virtual void sub_1A0() { };                                 // 1A0 called once attache from EntityPreview
    virtual uintptr_t CopyComponentsToStorage(                  // 1A8
        EntityDefinition * definition, void * a2); 
    virtual RED4ext::CClass* sub_1B0();                         // 1B0
    virtual bool sub_1B8();                                     // 1B8 IsReplicable
    virtual CString* sub_1C0(CString*);                         // 1C0 Get "<UNKNOWN>"

// methods

    // calls CopyCompponentsToStorage
    /// @pattern 48 89 5C 24 08 57 48 81 EC 00 01 00 00 48 8B 02 48 8B FA 48 89 41 60 48 8B D9 48 8B 42 08 48 89
    uint64_t SetupEntityAndComponents(EntityDefinition* definition);

    // 1.52 RVA: 0x1030DA0 / 16977312
    /// @pattern 40 55 53 56 57 41 54 41 55 41 56 41 57 48 8D 6C 24 88 48 81 EC 78 01 00 00 4C 8B EA 49 8B D9 48
    void ReassembleAppearance(__int64 rdx0, uint64_t a3, uint64_t unk58, DynArray<Handle<IComponent>> *components, Handle<IComponent> *end);

    // 1.52 RVA: 0x1031BF0 / 16980976
    /// @pattern 48 89 5C 24 18 48 89 74 24 20 57 48 83 EC 20 80 A1 5C 01 00 00 F9 48 8B F1 48 83 C1 70 E8 6E 5D
    // char SetAnimatedVisualComponentFlags();

    // 1.52 RVA: 0x103B3F0 / 17019888
    /// @pattern 40 55 53 57 48 8D 6C 24 B9 48 81 EC B0 00 00 00 48 83 C1 70 E8 77 C5 3F FF 48 8B 18 8B 78 0C 48
    // void ProcessIPlacedComponents();

    // 1.52 RVA: 0x1037B30 / 17005360
    /// @pattern 40 56 48 83 EC 50 48 89 5C 24 68 48 8B F1 48 89 7C 24 48 48 8B DA 8B BA 00 01 00 00 48 C1 E7 04
    __int64 SomethingListeners(Handle<IScriptable> *a2);

    // 1.52 RVA: 0x1035260 / 16994912
    /// @pattern 48 89 5C 24 08 57 48 83 EC 30 48 8B 02 48 8B D9 48 89 44 24 20 48 8D 4C 24 20 48 8B 42 08 48 8B
    // void SomethingListeners2(Handle<IScriptable> *a2);

    // 1.52 RVA: 0x1035300 / 16995072
    /// @pattern 48 83 C1 70 E9 77 26 40 FF
    // DynArray<Handle<IComponent>>  GetComponents();

    // 1.6  RVA: 0x1046880 / 17066112
    /// @pattern 48 89 5C 24 08 48 89 74 24 10 48 89 7C 24 18 4C 89 64 24 20 55 41 56 41 57 48 8B EC 48 81 EC 80
    void SetRuntime(__int64 a2);

    enum class ComponentFlags : uint8_t {
        unk1 = 0x1,
        hasAnimatedComponent = 0x2,
        hasVisualControllerComponent = 0x4,
        // related to runtime
        unk8 = 0x8,
        // components need initialized?
        unk20 = 0x20
    };
    enum class EntityState : uint8_t {
        Detached = 2,
        WillAttach = 3,
        Attached = 4,
        WillDetach = 5,
        Preuninitialize = 6,
        Uninitialized = 7,
    };

    uint32_t unk40;
    // related to entity system - id?
    uint32_t unk44;
    EntityID entityID;
    CName currentAppearance;
    // maybe ProxyCacheID?
    uint64_t unk58;
    ResourcePath resource; // 60
    uint64_t unk68;
    ComponentsStorage componentsStorage; // 70
    void* placeholder; // B0
    world::RuntimeScene* runtime; // B8
    ScriptGameInstance* scriptGameInstance; // C0
    Handle<void> unkC8;
    CallbackManager callbackManager; // D8
    red::TagList entityTags; // 138
    // isReplicated = unk148 != 0
    void * unk148; // 148
    float updatingTransform; // 150
    uint8_t customCameraTarget = 0; // 154
    int8_t controllingPeerID = -1; // 155
    EntityState entityState; // 156
    uint8_t unk157; // 157
    uint16_t unk158 = 0; // 158
    // factoryID
    uint8_t unk15A = 2; // 15A
    uint8_t renderSceneLayerMask = 1; // 15B
    ComponentFlags componentFlags;
    uint8_t unk15D;
    uint8_t unk15E;
    uint8_t unk15F;
};
RED4EXT_ASSERT_SIZE(Entity, 0x160);
// char (*__kaboom)[sizeof(Entity)] = 1;
RED4EXT_ASSERT_OFFSET(Entity, entityID, 0x48);
RED4EXT_ASSERT_OFFSET(Entity, currentAppearance, 0x50);
RED4EXT_ASSERT_OFFSET(Entity, entityTags, 0x138);
} // namespace ent
} // namespace RED4ext

#ifdef RED4EXT_HEADER_ONLY
#include <RED4ext/Scripting/Natives/entEntity-inl.hpp>
#endif
