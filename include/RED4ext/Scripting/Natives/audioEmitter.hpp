#pragma once

// This file is generated by Jack

#include <cstdint>
#include <RED4ext/Common.hpp>
#include <RED4ext/NativeTypes.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/EntityID.hpp>

namespace RED4ext
{
namespace audio
{

struct GameParameter {
    CName parameterName;
    float value;
    uint32_t counter;
};

struct GameParameterStorage {
    // 1.6 RVA: 0x2CA5050 / 46813264
    /// @pattern 48 89 5C 24 08 48 89 74 24 10 57 48 83 EC 30 48 8B F1 0F 29 74 24 20 48 83 C1 20 0F 28 F2 48 8B
    float __fastcall GetValue(CName parameterName, float defaultValue);

    // 1.6 RVA: 0x2CA51C0 / 46813632
    /// @pattern 48 89 5C 24 20 55 57 41 56 48 83 EC 60 0F 29 74 24 50 4C 8B F1 0F 29 7C 24 40 48 83 C1 20 0F 28
    float *__fastcall SetValue(CName gameParameter, float value, float timeSinceMaybe);

    DynArray<GameParameter> gameParameters;
    DynArray<CName> switchGroups;
    SharedMutex gameParameterMutex;
};

struct Emitter {
    RED4ext::CName emitterName;
    Emitter * parent;
    GameParameterStorage parameters;
};

RED4EXT_ASSERT_SIZE(Emitter, 0x38); 

struct Emitters {
    // 1.6 RVA: 0x2CA5BA0 / 46816160
    /// @pattern 48 89 5C 24 08 48 89 74 24 18 48 89 54 24 10 57 48 83 EC 40 48 8B F1 49 8B D8 48 81 C1 48 80 0A
    Emitter *__fastcall GetEmitterForEntityID(ent::EntityID entityID, CName emitterName);

    // 1.6 RVA: 0x2CA57E0 / 46815200
    /// @pattern 48 89 54 24 10 53 41 56 48 83 EC 48 49 8B D8 4C 8B F1 E8 A9 03 00 00 48 85 C0 0F 85 BC 00 00 00
    Emitter *__fastcall GetOrCreateEmitter(ent::EntityID entityID, CName emitterName);

    Emitter emitters[0x3000];
    HashMap<CName, DynArray<CName>>::NodeList nodeList;
    HashMap<ent::EntityID, Emitter> entities;
    SharedMutex entitiesMutex;
};

} // namespace audio
} // namespace RED4ext