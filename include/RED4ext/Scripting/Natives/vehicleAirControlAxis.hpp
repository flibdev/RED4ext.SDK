#pragma once

// This file is generated by Jack

#include <cstdint>
#include <RED4ext/Common.hpp>
#include <RED4ext/Scripting/Natives/vehiclePID.hpp>

namespace RED4ext
{
namespace vehicle
{
#pragma pack(push, 1)
struct AirControlAxis
{
    static constexpr const char* NAME = "vehicleAirControlAxis";
    static constexpr const char* ALIAS = NAME;

    PID angle;
    PID velocity;
    uint8_t controlAxis;
    uint8_t unk41;
    uint8_t unk42;
    uint8_t unk43;
    float multiplier;
    float brakeMultiplierWhenNoInput;
    uint8_t stabilizeAxis;
    uint8_t unk4D;
    uint8_t unk4E;
    uint8_t unk4F;
    float angleCorrectionThresholdMin;
    float angleCorrectionThresholdMax;
    float angleCorrectionFactorMin;
    float angleCorrectionFactorMax;
    float velocityDampingThresholdMin;
    float velocityDampingThresholdMax;
    float velocityDampingFactorMin;
    float velocityDampingFactorMax;
    float maxVelocityCompensation;
    float maxAngleCompensation;
    float zeroAngleThreshold;
    float maxAngleToCompensateThreshold;
    RED4ext::Vector4 unk5C[3];
};
#pragma pack(pop)
RED4EXT_ASSERT_SIZE(AirControlAxis, 0xB0);
} // namespace vehicle
} // namespace RED4ext
