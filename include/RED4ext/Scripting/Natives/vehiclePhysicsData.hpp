#pragma once

// This file is generated by Jack

#include <cstdint>
#include <RED4ext/Common.hpp>
#include <RED4ext/Scripting/Natives/Generated/Transform.hpp>
#include <RED4ext/Scripting/Natives/Generated/Vector3.hpp>
#include <RED4ext/Scripting/Natives/Generated/Vector4.hpp>
#include <RED4ext/Scripting/Natives/Generated/Box.hpp>
#include <RED4ext/Scripting/Natives/Generated/Matrix.hpp>
#include <RED4ext/Scripting/Natives/Generated/WorldTransform.hpp>

namespace RED4ext
{
namespace vehicle { 
struct BaseObject;
struct PhysicsData
{
    static constexpr const char* NAME = "vehiclePhysicsData";
    static constexpr const char* ALIAS = NAME;

    Vector3 force;
    Vector3 torque;
    Vector3 velocity;
    Vector3 angularVelocity;
    Quaternion orientation;
    float inverseMass;
    uint32_t unk48[3];
    Matrix localInertiaTensor;
    Matrix worldInertiaTensor;
    Matrix invertedLocalInertiaTensor;
    Matrix invertedWorldInertiaTensor;
    WorldTransform currentTransform;
    Vector4 worldPosition;
    BaseObject* vehicle;
    uint64_t unk188;
    Box bounds;
    uint64_t unk1B0;
    float unk1B8;
    float total_mass;
    float chassis_mass;
    uint8_t usesInertiaTensor;
    uint8_t unk1C5;
    uint8_t unk1C6;
    uint8_t unk1C7;
    Vector3 momentOfInertiaScale;
    Vector3 centerOfMass;
};
RED4EXT_ASSERT_SIZE(PhysicsData, 0x1E0);
} // namespace vehicle
} // namespace RED4ext
