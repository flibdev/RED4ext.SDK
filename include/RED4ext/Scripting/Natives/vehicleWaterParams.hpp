#pragma once

// This file is generated by Jack

#include <cstdint>
#include <RED4ext/Common.hpp>
#include <RED4ext/Scripting/Natives/Generated/Transform.hpp>
#include <RED4ext/Scripting/Natives/Generated/WorldTransform.hpp>
#include <RED4ext/Scripting/Natives/Generated/Box.hpp>
#include <RED4ext/Scripting/Natives/Generated/Matrix.hpp>

namespace RED4ext {
namespace vehicle {
struct BaseObject;
struct WaterParams {
    BaseObject * vehicle; // ",    0,    0x35500400,    0XFFFFFFFFFFFFFFFF,    8,    0XFFFFFFFFFFFFFFFF,    0,    0x000009);
    bool hasWaterParams; // ",    0X8,    0x000400,    -1,    1);
    bool disableAirControl; // ",    0X9,    0x000400,    -1,    1);
    bool disableEngine; // ",    0XA,    0x000400,    -1,    1);
    uint8_t unk0B; // ",    0XB,    0x000400,    -1,    1);
    float unk0C; // ",    0XC,    0x000400,    -1,    4);
    float submergedThreshold; // ",    0X10,    0x80000400,    -1,    4);
    float buoyancyCoef; // ",    0X14,    0x80000400,    -1,    4);
    float linearDampingCoef; // ",    0X18,    0x80000400,    -1,    4);
    float angularDampingCoef; // ",    0X1C,    0x80000400,    -1,    4);
    float submergedDepthMaybe; // ",    0X20,    0x80000400,    -1,    4);
    float minSpeedToApplyImpulses; // ",    0X24,    0x80000400,    -1,    4);
    float minDistanceBetweenImpulses; // ",    0X28,    0x80000400,    -1,    4);
    float impulseRadius; // ",    0X2C,    0x80000400,    -1,    4);
    float impulseStrength; // ",    0X30,    0x80000400,    -1,    4);
    float impulseOverhangDistance; // ",    0X34,    0x80000400,    -1,    4);
    float maxVehicleSpeed; // ",    0X38,    0x80000400,    -1,    4);
    float impulseStrengthFallMultiplierMin; // ",    0X3C,    0x80000400,    -1,    4);
    float impulseStrengthFallMultiplierMax; // ",    0X40,    0x80000400,    -1,    4);
    float verticalVelocityThresholdForFallFx; // ",    0X44,    0x80000400,    -1,    4);
    float depthThresholdForFallFx; // ",    0X48,    0x80000400,    -1,    4);
    float minDistanceBetweenFx; // ",    0X4C,    0x80000400,    -1,    4);
    CName vfx_impact_water_hash; // ",    0X50,    0x30000400,    -1,    8);
    CName vfx_impact_water; // ",    0X58,    0x60000400,    get_struc_id("RED4ext::CName"),    8);
    Handle<ISerializable> unk60; // ",    0X60,    0x60000400,    get_struc_id("RED4ext::Handle"),    16);
    DynArray<void *> unk70; // ",    0X70,    0x60000400,    get_struc_id("RED4ext::DynArray"),    16);
    DynArray<void *> unk80; // ",    0X80,    0x60000400,    get_struc_id("RED4ext::DynArray"),    16);
    Matrix unk90; // ",    0X90,    0x60000400,    get_struc_id("RED4ext::Matrix"),    64);
    Box unkD0; // ",    0XD0,    0x60000400,    get_struc_id("RED4ext::Box"),    32);
    bool unkF0; // ",    0XF0,    0x000400,    -1,    1);
};

}
}
