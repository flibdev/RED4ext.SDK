#pragma once

// This file is generated by Jack

#include <cstdint>
#include <RED4ext/Common.hpp>
#include <RED4ext/NativeTypes.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/EntityID.hpp>

namespace RED4ext
{
namespace audio
{
struct BankManager {

    // 1.6  RVA: 0x2CACBC0 / 46844864
    /// @pattern 48 83 EC 28 80 B9 A8 01 00 00 00 75 10 E8 BE 05 00 00 84 C0 74 07 B0 01 48 83 C4 28 C3 32 C0 48
    bool __fastcall LoadBanksMaybe(__int64);

    // 1.52 RVA: 0x2CACDE0 / 46845408
    /// @pattern 48 81 EC B8 00 00 00 4C 8D 44 24 20 48 C7 84 24 A0 00 00 00 00 00 00 00 E8 13 00 00 00 48 81 C4
    __int64 __fastcall LoadBank(__int64 a2, uint64_t);

    // 1.52 RVA: 0x2CAE510 / 46851344
    /// @pattern 48 89 54 24 10 48 89 4C 24 08 53 57 41 54 41 55 41 56 48 83 EC 50 48 8D 79 60 4C 8B E9 48 8B CF
    __int64 __fastcall UnloadBank(__int64 a2);

    HashMap<CName, uint32_t> vehicleBanks;
    HashMap<CName, void *> loadedBanks;
    SharedMutex loadedBanksMutex;
    HashMap<CName, Handle<CName>> vehicleBanksAdditional;
    uint64_t unk30[33];
    uint64_t unk1A0;
    uint8_t unk1A8;
    uint8_t unk1A9;
    uint16_t unk1AA;
    uint16_t unk1AC;
    uint16_t unk1AE;
    uint64_t unk1B0;
};

}
}